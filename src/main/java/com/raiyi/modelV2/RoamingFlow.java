/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.raiyi.modelV2;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RoamingFlow extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RoamingFlow\",\"namespace\":\"com.raiyi.modelV2\",\"fields\":[{\"name\":\"not_roaming_flow\",\"type\":\"int\",\"doc\":\"非漫游流量\",\"default\":-1},{\"name\":\"in_province_roaming_flow\",\"type\":\"int\",\"doc\":\"省内漫游流量\",\"default\":-1},{\"name\":\"inter_province_roaming_flow\",\"type\":\"int\",\"doc\":\"省际漫游流量\",\"default\":-1},{\"name\":\"international_roaming_flow\",\"type\":\"int\",\"doc\":\"国际漫游流量\",\"default\":-1}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** 非漫游流量 */
  @Deprecated public int not_roaming_flow;
  /** 省内漫游流量 */
  @Deprecated public int in_province_roaming_flow;
  /** 省际漫游流量 */
  @Deprecated public int inter_province_roaming_flow;
  /** 国际漫游流量 */
  @Deprecated public int international_roaming_flow;

  /**
   * Default constructor.
   */
  public RoamingFlow() {}

  /**
   * All-args constructor.
   */
  public RoamingFlow(java.lang.Integer not_roaming_flow, java.lang.Integer in_province_roaming_flow, java.lang.Integer inter_province_roaming_flow, java.lang.Integer international_roaming_flow) {
    this.not_roaming_flow = not_roaming_flow;
    this.in_province_roaming_flow = in_province_roaming_flow;
    this.inter_province_roaming_flow = inter_province_roaming_flow;
    this.international_roaming_flow = international_roaming_flow;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return not_roaming_flow;
    case 1: return in_province_roaming_flow;
    case 2: return inter_province_roaming_flow;
    case 3: return international_roaming_flow;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: not_roaming_flow = (java.lang.Integer)value$; break;
    case 1: in_province_roaming_flow = (java.lang.Integer)value$; break;
    case 2: inter_province_roaming_flow = (java.lang.Integer)value$; break;
    case 3: international_roaming_flow = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'not_roaming_flow' field.
   * 非漫游流量   */
  public java.lang.Integer getNotRoamingFlow() {
    return not_roaming_flow;
  }

  /**
   * Sets the value of the 'not_roaming_flow' field.
   * 非漫游流量   * @param value the value to set.
   */
  public void setNotRoamingFlow(java.lang.Integer value) {
    this.not_roaming_flow = value;
  }

  /**
   * Gets the value of the 'in_province_roaming_flow' field.
   * 省内漫游流量   */
  public java.lang.Integer getInProvinceRoamingFlow() {
    return in_province_roaming_flow;
  }

  /**
   * Sets the value of the 'in_province_roaming_flow' field.
   * 省内漫游流量   * @param value the value to set.
   */
  public void setInProvinceRoamingFlow(java.lang.Integer value) {
    this.in_province_roaming_flow = value;
  }

  /**
   * Gets the value of the 'inter_province_roaming_flow' field.
   * 省际漫游流量   */
  public java.lang.Integer getInterProvinceRoamingFlow() {
    return inter_province_roaming_flow;
  }

  /**
   * Sets the value of the 'inter_province_roaming_flow' field.
   * 省际漫游流量   * @param value the value to set.
   */
  public void setInterProvinceRoamingFlow(java.lang.Integer value) {
    this.inter_province_roaming_flow = value;
  }

  /**
   * Gets the value of the 'international_roaming_flow' field.
   * 国际漫游流量   */
  public java.lang.Integer getInternationalRoamingFlow() {
    return international_roaming_flow;
  }

  /**
   * Sets the value of the 'international_roaming_flow' field.
   * 国际漫游流量   * @param value the value to set.
   */
  public void setInternationalRoamingFlow(java.lang.Integer value) {
    this.international_roaming_flow = value;
  }

  /** Creates a new RoamingFlow RecordBuilder */
  public static com.raiyi.modelV2.RoamingFlow.Builder newBuilder() {
    return new com.raiyi.modelV2.RoamingFlow.Builder();
  }
  
  /** Creates a new RoamingFlow RecordBuilder by copying an existing Builder */
  public static com.raiyi.modelV2.RoamingFlow.Builder newBuilder(com.raiyi.modelV2.RoamingFlow.Builder other) {
    return new com.raiyi.modelV2.RoamingFlow.Builder(other);
  }
  
  /** Creates a new RoamingFlow RecordBuilder by copying an existing RoamingFlow instance */
  public static com.raiyi.modelV2.RoamingFlow.Builder newBuilder(com.raiyi.modelV2.RoamingFlow other) {
    return new com.raiyi.modelV2.RoamingFlow.Builder(other);
  }
  
  /**
   * RecordBuilder for RoamingFlow instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RoamingFlow>
    implements org.apache.avro.data.RecordBuilder<RoamingFlow> {

    private int not_roaming_flow;
    private int in_province_roaming_flow;
    private int inter_province_roaming_flow;
    private int international_roaming_flow;

    /** Creates a new Builder */
    private Builder() {
      super(com.raiyi.modelV2.RoamingFlow.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.raiyi.modelV2.RoamingFlow.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing RoamingFlow instance */
    private Builder(com.raiyi.modelV2.RoamingFlow other) {
            super(com.raiyi.modelV2.RoamingFlow.SCHEMA$);
      if (isValidValue(fields()[0], other.not_roaming_flow)) {
        this.not_roaming_flow = data().deepCopy(fields()[0].schema(), other.not_roaming_flow);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.in_province_roaming_flow)) {
        this.in_province_roaming_flow = data().deepCopy(fields()[1].schema(), other.in_province_roaming_flow);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.inter_province_roaming_flow)) {
        this.inter_province_roaming_flow = data().deepCopy(fields()[2].schema(), other.inter_province_roaming_flow);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.international_roaming_flow)) {
        this.international_roaming_flow = data().deepCopy(fields()[3].schema(), other.international_roaming_flow);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'not_roaming_flow' field */
    public java.lang.Integer getNotRoamingFlow() {
      return not_roaming_flow;
    }
    
    /** Sets the value of the 'not_roaming_flow' field */
    public com.raiyi.modelV2.RoamingFlow.Builder setNotRoamingFlow(int value) {
      validate(fields()[0], value);
      this.not_roaming_flow = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'not_roaming_flow' field has been set */
    public boolean hasNotRoamingFlow() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'not_roaming_flow' field */
    public com.raiyi.modelV2.RoamingFlow.Builder clearNotRoamingFlow() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'in_province_roaming_flow' field */
    public java.lang.Integer getInProvinceRoamingFlow() {
      return in_province_roaming_flow;
    }
    
    /** Sets the value of the 'in_province_roaming_flow' field */
    public com.raiyi.modelV2.RoamingFlow.Builder setInProvinceRoamingFlow(int value) {
      validate(fields()[1], value);
      this.in_province_roaming_flow = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'in_province_roaming_flow' field has been set */
    public boolean hasInProvinceRoamingFlow() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'in_province_roaming_flow' field */
    public com.raiyi.modelV2.RoamingFlow.Builder clearInProvinceRoamingFlow() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'inter_province_roaming_flow' field */
    public java.lang.Integer getInterProvinceRoamingFlow() {
      return inter_province_roaming_flow;
    }
    
    /** Sets the value of the 'inter_province_roaming_flow' field */
    public com.raiyi.modelV2.RoamingFlow.Builder setInterProvinceRoamingFlow(int value) {
      validate(fields()[2], value);
      this.inter_province_roaming_flow = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'inter_province_roaming_flow' field has been set */
    public boolean hasInterProvinceRoamingFlow() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'inter_province_roaming_flow' field */
    public com.raiyi.modelV2.RoamingFlow.Builder clearInterProvinceRoamingFlow() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'international_roaming_flow' field */
    public java.lang.Integer getInternationalRoamingFlow() {
      return international_roaming_flow;
    }
    
    /** Sets the value of the 'international_roaming_flow' field */
    public com.raiyi.modelV2.RoamingFlow.Builder setInternationalRoamingFlow(int value) {
      validate(fields()[3], value);
      this.international_roaming_flow = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'international_roaming_flow' field has been set */
    public boolean hasInternationalRoamingFlow() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'international_roaming_flow' field */
    public com.raiyi.modelV2.RoamingFlow.Builder clearInternationalRoamingFlow() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public RoamingFlow build() {
      try {
        RoamingFlow record = new RoamingFlow();
        record.not_roaming_flow = fieldSetFlags()[0] ? this.not_roaming_flow : (java.lang.Integer) defaultValue(fields()[0]);
        record.in_province_roaming_flow = fieldSetFlags()[1] ? this.in_province_roaming_flow : (java.lang.Integer) defaultValue(fields()[1]);
        record.inter_province_roaming_flow = fieldSetFlags()[2] ? this.inter_province_roaming_flow : (java.lang.Integer) defaultValue(fields()[2]);
        record.international_roaming_flow = fieldSetFlags()[3] ? this.international_roaming_flow : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
