/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class HostPair extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"HostPair\",\"namespace\":\"model\",\"fields\":[{\"name\":\"host\",\"type\":\"string\"},{\"name\":\"frequency\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence host;
  @Deprecated public int frequency;

  /**
   * Default constructor.
   */
  public HostPair() {}

  /**
   * All-args constructor.
   */
  public HostPair(java.lang.CharSequence host, java.lang.Integer frequency) {
    this.host = host;
    this.frequency = frequency;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return host;
    case 1: return frequency;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: host = (java.lang.CharSequence)value$; break;
    case 1: frequency = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'host' field.
   */
  public java.lang.CharSequence getHost() {
    return host;
  }

  /**
   * Sets the value of the 'host' field.
   * @param value the value to set.
   */
  public void setHost(java.lang.CharSequence value) {
    this.host = value;
  }

  /**
   * Gets the value of the 'frequency' field.
   */
  public java.lang.Integer getFrequency() {
    return frequency;
  }

  /**
   * Sets the value of the 'frequency' field.
   * @param value the value to set.
   */
  public void setFrequency(java.lang.Integer value) {
    this.frequency = value;
  }

  /** Creates a new HostPair RecordBuilder */
  public static model.HostPair.Builder newBuilder() {
    return new model.HostPair.Builder();
  }
  
  /** Creates a new HostPair RecordBuilder by copying an existing Builder */
  public static model.HostPair.Builder newBuilder(model.HostPair.Builder other) {
    return new model.HostPair.Builder(other);
  }
  
  /** Creates a new HostPair RecordBuilder by copying an existing HostPair instance */
  public static model.HostPair.Builder newBuilder(model.HostPair other) {
    return new model.HostPair.Builder(other);
  }
  
  /**
   * RecordBuilder for HostPair instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<HostPair>
    implements org.apache.avro.data.RecordBuilder<HostPair> {

    private java.lang.CharSequence host;
    private int frequency;

    /** Creates a new Builder */
    private Builder() {
      super(model.HostPair.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(model.HostPair.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing HostPair instance */
    private Builder(model.HostPair other) {
            super(model.HostPair.SCHEMA$);
      if (isValidValue(fields()[0], other.host)) {
        this.host = data().deepCopy(fields()[0].schema(), other.host);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.frequency)) {
        this.frequency = data().deepCopy(fields()[1].schema(), other.frequency);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'host' field */
    public java.lang.CharSequence getHost() {
      return host;
    }
    
    /** Sets the value of the 'host' field */
    public model.HostPair.Builder setHost(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.host = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'host' field has been set */
    public boolean hasHost() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'host' field */
    public model.HostPair.Builder clearHost() {
      host = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'frequency' field */
    public java.lang.Integer getFrequency() {
      return frequency;
    }
    
    /** Sets the value of the 'frequency' field */
    public model.HostPair.Builder setFrequency(int value) {
      validate(fields()[1], value);
      this.frequency = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'frequency' field has been set */
    public boolean hasFrequency() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'frequency' field */
    public model.HostPair.Builder clearFrequency() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public HostPair build() {
      try {
        HostPair record = new HostPair();
        record.host = fieldSetFlags()[0] ? this.host : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.frequency = fieldSetFlags()[1] ? this.frequency : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
